name: preview

on:
  push:
    tags:
      - '**_qa_v[0-9]+.[0-9]+.[0-9]+'

jobs:
  preview:
    name: preview
    runs-on: ubuntu-latest

    outputs:
      package_name: ${{ steps.package_info.outputs.name }}
      package_version: ${{ steps.package_info.outputs.version }}

    steps:
      - name: pull code
        uses: actions/checkout@v2

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "(?<package>.*)_qa_v(?<version>.*)"

      - name: package information
        id: package_info
        uses: ./.github/actions/package_info
        with:
          module_name: ${{ steps.tagName.outputs.package }}
          module_version: ${{ steps.tagName.outputs.version }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run:
          NEXT_PUBLIC_BASE_PATH=/qa_v${{ steps.tagName.outputs.version }} ENVIRONMENT=qa pnpm build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Adding Known Hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to target ECS with rsync
        run: |
          mkdir -p ./build/qa_v${{ steps.tagName.outputs.version }}
          mv ./out/*.* ./build/qa_v${{ steps.tagName.outputs.version }}/
          rsync -avz -e 'ssh -p ${{ secrets.SSH_PORT }}' --progress ./build/* ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
