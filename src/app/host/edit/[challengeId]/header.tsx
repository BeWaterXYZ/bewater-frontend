"use client";
import { Challenge, ChallengeID } from "@/services/types";
import clsx from "clsx";
import Image from "next/image";
import Link from "next/link";
import { useSelectedLayoutSegment } from "next/navigation";
import { PublishButton } from "./publish-button";
import useRole from "@/hooks/useRole";
import { useFetchChallengeById } from "@/services/challenge.query";
const links = [
  {
    path: "content",
    label: "Content",
    hackathonOnly: false,
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="none"
        viewBox="0 0 16 16"
      >
        <path
          fill="currentColor"
          d="M3 5a1 1 0 011-1h8a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V5zm9 0H4v2h8V5zm-2 4a1 1 0 00-1 1v1a1 1 0 001 1h2a1 1 0 001-1v-1a1 1 0 00-1-1h-2zm0 1h2v1h-2v-1zm-7-.5a.5.5 0 01.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zm.5 1.5a.5.5 0 000 1h4a.5.5 0 000-1h-4zM1 4a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H4a3 3 0 01-3-3V4zm3-2a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2V4a2 2 0 00-2-2H4z"
        ></path>
      </svg>
    ),
  },
  {
    path: "rating",
    label: "Rating",
    hackathonOnly: true,
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="none"
        viewBox="0 0 16 16"
      >
        <path
          fill="currentColor"
          d="M4.418 2.213L3.21 4.455a2.5 2.5 0 01-.962.986l-.994.567a.5.5 0 00-.221.607l.391 1.063a.5.5 0 00.324.306l3.203.97a1.004 1.004 0 001.255-.681c.224-.773.507-1.74.77-2.616A.51.51 0 006.49 5H5.5a.5.5 0 01-.465-.684l.001-.002.03-.086a4.065 4.065 0 00.226-1.073c.02-.302-.01-.565-.1-.76-.079-.173-.212-.314-.476-.39-.03-.008-.07-.008-.125.023a.467.467 0 00-.173.186zm1.873 1.005a4.803 4.803 0 01-.12.781h.32a1.51 1.51 0 011.443 1.945 334.63 334.63 0 00-.767 2.608 2.004 2.004 0 01-2.506 1.36L1.458 8.94a1.5 1.5 0 01-.972-.917L.095 6.96A1.5 1.5 0 01.758 5.14l.994-.568a1.5 1.5 0 00.577-.59l1.209-2.244c.239-.443.788-.883 1.45-.695.558.157.917.505 1.113.934.186.406.215.857.19 1.24zm5.29 10.566l1.209-2.243a2.5 2.5 0 01.961-.985l.994-.568a.5.5 0 00.222-.607l-.392-1.063a.5.5 0 00-.324-.305l-3.202-.971a1.004 1.004 0 00-1.256.682c-.224.772-.507 1.74-.769 2.615a.51.51 0 00.485.658h.99a.5.5 0 01.465.684v.003l-.031.085a4.068 4.068 0 00-.226 1.073c-.02.302.011.566.1.761.08.173.212.314.477.389.03.008.07.008.124-.023a.468.468 0 00.174-.185zm-1.873-1.005c.018-.284.067-.555.12-.782h-.319a1.51 1.51 0 01-1.443-1.945c.261-.872.543-1.836.767-2.607a2.004 2.004 0 012.506-1.36l3.202.97c.45.137.81.477.973.918l.391 1.063a1.5 1.5 0 01-.664 1.82l-.994.568a1.5 1.5 0 00-.577.591l-1.208 2.243c-.239.444-.789.884-1.45.696-.558-.158-.917-.506-1.114-.934-.186-.407-.214-.858-.19-1.241z"
        ></path>
      </svg>
    ),
  },
  {
    path: "result",
    label: "Result",
    hackathonOnly: true,
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="none"
        viewBox="0 0 16 16"
      >
        <path
          fill="currentColor"
          d="M4 3a2 2 0 012-2h4a2 2 0 012 2h.5A1.5 1.5 0 0114 4.5v1c0 1.251-.92 2.287-2.119 2.471A4.003 4.003 0 018.5 10.969V12H10a2 2 0 012 2v.504a.5.5 0 01-.5.5h-7a.5.5 0 01-.5-.5V14a2 2 0 012-2h1.5v-1.03A4.004 4.004 0 014.119 7.97 2.503 2.503 0 011.997 5.5v-1a1.5 1.5 0 011.5-1.5H4zm7 0a1 1 0 00-1-1H6a1 1 0 00-1 1v4a3 3 0 006 .07V3zm1 3.914c.583-.206 1-.761 1-1.414v-1a.5.5 0 00-.5-.5H12v2.914zM4 4h-.503a.5.5 0 00-.5.5v1c0 .653.419 1.209 1.003 1.415V4zm1 10v.004h6V14a1 1 0 00-1-1H6a1 1 0 00-1 1z"
        ></path>
      </svg>
    ),
  },
  {
    path: "analytics",
    label: "Analytics",
    hackathonOnly: true,
    orgOnly: true,
    icon: (
      <svg
        width="12"
        height="13"
        viewBox="0 0 12 13"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0.750001 5.73529C0.750001 8.35182 2.73284 10.4962 5.25001 10.6914V11.458C2.31824 11.2613 0 8.77433 0 5.73529C0 2.56778 2.5184 0 5.62501 0C8.60562 0 11.0448 2.36372 11.2377 5.35299C10.6876 5.35749 10.2081 5.66388 9.95067 6.11765H6.37501C5.75369 6.11765 5.25001 5.60409 5.25001 4.97059V0.779193C2.73284 0.974432 0.750001 3.11876 0.750001 5.73529ZM10.4858 5.35294C10.3037 2.91261 8.39342 0.964832 6.00001 0.779193V4.97059C6.00001 5.18176 6.1679 5.35294 6.37501 5.35294H10.4858ZM10.5 6.88235C10.5 6.46002 10.8358 6.11765 11.25 6.11765C11.6642 6.11765 12 6.46002 12 6.88235V12.2353C12 12.6576 11.6642 13 11.25 13C10.8358 13 10.5 12.6576 10.5 12.2353V6.88235ZM6.00001 9.94118C6.00001 9.51884 6.3358 9.17647 6.75001 9.17647C7.16423 9.17647 7.50001 9.51884 7.50001 9.94118V12.2353C7.50001 12.6576 7.16423 13 6.75001 13C6.3358 13 6.00001 12.6576 6.00001 12.2353V9.94118ZM8.25001 8.41177C8.25001 7.98943 8.5858 7.64706 9.00002 7.64706C9.41423 7.64706 9.75002 7.98943 9.75002 8.41177V12.2353C9.75002 12.6576 9.41423 13 9.00002 13C8.5858 13 8.25001 12.6576 8.25001 12.2353V8.41177Z"
          fill="currentColor"
        />
      </svg>
    ),
  },
  {
    path: `settings`,
    label: "Settings",
    hackathonOnly: false,
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        fill="none"
        viewBox="0 0 16 16"
      >
        <path
          fill="currentColor"
          d="M8 6a2 2 0 100 4 2 2 0 000-4zM7 8a1 1 0 112 0 1 1 0 01-2 0zm3.618-3.602a.708.708 0 01-.824-.567l-.26-1.416a.354.354 0 00-.275-.282 6.072 6.072 0 00-2.519 0 .354.354 0 00-.275.282l-.259 1.416a.71.71 0 01-.936.538l-1.359-.484a.355.355 0 00-.382.095c-.569.627-1 1.367-1.262 2.173a.352.352 0 00.108.378l1.102.931a.704.704 0 010 1.076l-1.102.931a.352.352 0 00-.108.378A5.986 5.986 0 003.53 12.02a.355.355 0 00.382.095l1.36-.484a.708.708 0 01.936.538l.258 1.416c.026.14.135.252.275.281a6.075 6.075 0 002.52 0 .353.353 0 00.274-.281l.26-1.416a.71.71 0 01.936-.538l1.359.484c.135.048.286.01.382-.095.569-.627 1-1.367 1.262-2.173a.352.352 0 00-.108-.378l-1.102-.931a.703.703 0 010-1.076l1.102-.931a.352.352 0 00.108-.378A5.985 5.985 0 0012.47 3.98a.355.355 0 00-.382-.095l-1.36.484a.71.71 0 01-.111.03zm-6.62.58l.937.333a1.71 1.71 0 002.255-1.3l.177-.97a5.105 5.105 0 011.265 0l.178.97a1.708 1.708 0 002.255 1.3L12 4.977c.255.334.467.698.63 1.084l-.754.637a1.704 1.704 0 000 2.604l.755.637a4.99 4.99 0 01-.63 1.084l-.937-.334a1.71 1.71 0 00-2.255 1.3l-.178.97a5.099 5.099 0 01-1.265 0l-.177-.97a1.708 1.708 0 00-2.255-1.3L4 11.023a4.987 4.987 0 01-.63-1.084l.754-.638a1.704 1.704 0 000-2.603l-.755-.637c.164-.386.376-.75.63-1.084z"
        ></path>
      </svg>
    ),
  },
];
export function Header({ challengeId }: { challengeId: ChallengeID }) {
  let segment = useSelectedLayoutSegment();
  const { isOrganization } = useRole();
  const { data: challenge } = useFetchChallengeById(challengeId);
  return (
    <div className="text-white flex justify-between w-full h-14 items-center p-4 border-b border-b-white/20">
      <div className="">
        <Link href="/host">
          <Image
            src="/logo/bewater-h.svg"
            width={120}
            height={24}
            alt="bewater logo"
          />
        </Link>
      </div>
      <div className="flex">
        {links.map(
          (link) =>
            ((isOrganization && link.orgOnly) || !link.orgOnly) &&
            (challenge?.type === "CHALLENGE" || !link.hackathonOnly) && (
              <Link
                key={link.label}
                className={clsx(
                  "body-2 p-3 rounded-[6px] flex gap-2 items-center",
                  link.path === segment ? "text-day" : "text-gray-500"
                )}
                href={`/host/edit/${challengeId}/${link.path ?? ""}`}
              >
                {link.icon}
                {link.label}
              </Link>
            )
        )}
      </div>
      <div>
        <PublishButton challengeId={challengeId} />
      </div>
    </div>
  );
}
